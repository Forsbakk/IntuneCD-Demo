name: Push configuration

on:
    push:
      branches:
        - main

env:
    TENANT_NAME: ${{ secrets.TAR_TENANT_NAME }}
    CLIENT_ID: ${{ secrets.TAR_CLIENT_ID }}
    CLIENT_SECRET: ${{ secrets.TAR_CLIENT_SECRET }}
    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    push_configuration:
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v4
              with:
                ref: ${{ github.head_ref }}

            - name: Install IntuneCD
              run: |
                pip3 install IntuneCD

            - name: Run Update to target tenant
              run: |
                cd prod-backup
                IntuneCD-startupdate -m 1 -p $GITHUB_WORKSPACE/prod-backup

            - name: Generate markdown document
              id: create-doc
              shell: bash
              run: |
                INTRO="Endpoint Manager backup and documentation generated at $GITHUB_REPOSITORY <img align=\"right\" width=\"96\" height=\"96\" src=\"./logo.png\">"
                IntuneCD-startdocumentation \
                    --path="$GITHUB_WORKSPACE/prod-backup" \
                    --outpath="$GITHUB_WORKSPACE/prod-as-built.md" \
                    --tenantname=$TENANT_NAME \
                    --intro="$INTRO"

            - name: Commit documentation updates
              uses: stefanzweifel/git-auto-commit-action@v5
              id: commit-doc
              continue-on-error: true
              with:
                commit_message: "Intune documentation created ${{ env.date }} [skip ci]"
                commit_user_name: ${{ secrets.COMMIT_NAME }}
                commit_user_email: ${{ secrets.COMMIT_EMAIL }}

            - name: Declare variables
              shell: bash
              run: |
                echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
                echo "date=$(date +%Y.%m.%d)" >> "$GITHUB_ENV"

            - name: create release
              if: steps.commit-doc.outputs.changes_detected == 'true'
              run: gh release create v${{ env.date }}-${{ env.sha_short }} --notes "Release created by GitHub Actions"
